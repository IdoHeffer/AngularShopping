var crypto = require('crypto'),
  assert = require('assert');


function base64Escape(str) {
  return str.replace(/\+/g, '-').replace(/\//g, '_').replace(/=/g, '');
}


function Store(options) {
  assert(options, 'options argument should be provided');
  assert(options.secret, 'secret phrase should be provided for this store');
  this.secret = options.secret;
  this.algorithm = options.algorithm || 'aes-256-ecb';
}


Store.prototype.make = function(payload, cb) {
  var cipher = crypto.createCipher(this.algorithm, this.secret);
  var token = base64Escape(cipher.update(JSON.stringify(payload), 'utf8', 'base64') + cipher.final('base64'));
  cb(null, token);
};


Store.prototype.retrieve = function(token, cb) {
  var decipher = crypto.createDecipher(this.algorithm, this.secret);
  try {
    var payload = JSON.parse(decipher.update(token, 'base64', 'utf8') + decipher.final('utf8'));
  } catch (e) {}
  cb(null, payload);
};


module.exports = Store;
